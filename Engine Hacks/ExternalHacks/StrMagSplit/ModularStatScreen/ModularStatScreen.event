#ifndef MODULAR_STAT_SCREEN
#define MODULAR_STAT_SCREEN

// Modular Stat Screen.
// hack by circleseverywhere

// Skill System Stat Screen by circleseverywhere with additions by Tequila, and probably more people too

#ifdef _FE8_

  #define Skl_Arrow_X 0x78
  #define Skl_Arrow_Y 0x38
  #define Spd_Arrow_X 0x78
  #define Spd_Arrow_Y 0x48
  #define Trv_Icon_X 0xB8
  #define Trv_Icon_Y 0x4E
  
  #include "Display Growths Options/Display Growths Options.txt"
 
  PUSH
      ORG 0x205b24 //24 for stat screen
        POIN MSS_page1|1 MSS_page2|1 MSS_page3|1 MSS_page4|1

      ORG $88690
        BYTE 4 //make 4 pages
		
    ORG $86E44
		jumpToHack(MSS_leftstatscreen);
	  
    ORG $88690
    BYTE 4 //make 4 pages

	ORG 0x889F8
	SHORT 0x0EB8
	
	ORG 0x9269C
	BYTE 0x1E	
	
	ORG 0x926C6
	BYTE 0x24
	
	ORG 0x926F0
	BYTE 0x2A
	
	ORG 0x92714
	BYTE 0x30
	
	ORG 0x9273E
	BYTE 0x36
	
	ORG 0xA00EC0
	BYTE $D4 $0E $A0 $08 $00 $00 $00 $00
	
	ORG 0xA00EE0
	BYTE $00 $00 $00 $00
	
    ORG $88650
      POIN NewPageNameGraphic

    ORG $87f38
      POIN NewPageNameLayout

    ORG $87f3c
      POIN NewPageNameTiles

    ORG $87f40
      POIN NewPageNamePalette

    ORG $889d0
      SHORT $e010 //Temporary r-text fix to prevent freezing

    ORG $889f2  
      SHORT $BD30
      BL(RText_Page4_ladder) //this has to be in bl range somewhere


    // Make all the arrows line up with the stats and stuff

    ORG $883C0
      BYTE Skl_Arrow_X 0x20 Skl_Arrow_Y
 
    ORG $883CA
      BYTE Spd_Arrow_X 0x20 Spd_Arrow_Y

    ORG $883F6
      BYTE Trv_Icon_X 0x21 Trv_Icon_Y

    ORG $883B4
      jumpToHack(Rescue_Arrows)

	ORG 0x87B72
	SHORT 0 0
	ORG 0x87BE8
	SHORT 0 0 //Remove alpha blending for bg1 
	ORG 0x4E0F6
	SHORT 0 0 //Lmao the game was loading leftover fe6 graphics 
  
    // Display growths hack

    #ifdef Display_Growths_Toggle
      ORG $8888C
        BYTE 0x82
    #endif
  
    ORG $88896
      SHORT 0x46C0
      jumpToHack(Button_Branch)
  
    // Remember whether we were looking at growths or stats

    ORG $8895C //Loads byte to store 1 before stat screen struct
      callHack_r1(Load_Page)

    ORG $888BC //Stores byte to store 1 before stat screen struct
      callHack_r3(Store_Page)



    // HP name color

    ORG $86ED4
      callHack_r3(HP_Name_Color)
	  
	ORG $2BA28
  jumpToHack(Write_Growths_To_Battle_Struct)

  ORG $2B9C4
  jumpToHack(Enemy_Autolevel)

  ORG $17E98
  callHack_r3(New_Unit_Exp)
  SHORT 0xE005  
  
      ORG $087184

      // This is Vanilla Stat Screen Page
      // This is now free (because unused) space
      // We'll use this for stuff that needs to
      // be in BL range

    RText_Page4_ladder:
      // page 4 helptext hook
      #incbin "asm/rtext_page4.dmp"
      POIN RText_Page4
	  
	    ORG $889f2  
        SHORT $BD30
        BL(RText_Page4_ladder) //this has to be in bl range somewhere
		
	  ORG $087184
		  
      ORG $88690
        jumpToHack(PageNumberCheck)	  
	  
	  
	ORG 0x87784 
	  WORD 0x2003D74
	  
	ORG 0x286DC
	  SHORT 0x2102 0x0209 0x1840 0x3001 0 0

	ORG 0x286C6
	  SHORT 0x3801 // Remove the +0x79 for icons 
  POP
  
	ALIGN 4
	MSS_page1:
	#incbin "asm/mss_page1_rearranged.dmp"
    WORD SS_TalkText
    WORD Growth_Options
    POIN Growth_Getter_Table
    POIN Get_Palette_Index
	POIN MagClassTable
	WORD SS_RatingName
  
  ALIGN 4
  MSS_page2:
    #incbin "asm/mss_page2_morestats.dmp"
	WORD SS_DdgText SS_AvoText

  ALIGN 4
  MSS_page3:
    #incbin "asm/mss_page3_skills.dmp"
    POIN SkillIcons
    POIN Skill_Getter
    POIN SkillTester
    WORD SaviorID
    WORD CelerityID
    WORD SS_SkillsText
	POIN AccessorySkillGetter
	//MESSAGE MSS_page3

  ALIGN 4
//  MSS_page4:
//    #incbin "asm/mss_page4_supports.dmp"
	
  ALIGN 4
  MSS_leftstatscreen:
	#incbin "asm/mss_leftstatscreen.dmp"
	POIN HP_Name_Color

  ALIGN 4
  NewPageNameGraphic:
    #incext Png2Dmp "asm/pagenamegraphic.png" --lz77

  ALIGN 4
  NewPageNameLayout:
    POIN $a008bc $a008d0 $a008de $a008bc
  NewPageNameTiles:
    SHORT 0 $40 $e $80

  ALIGN 4
  NewPageNamePalette:
    #incbin "asm/palettecycler.dmp"

  ALIGN 4
  Button_Branch:
    #incbin "asm/Button Branch.dmp"

   ALIGN 4
  Load_Page:
    #incbin "asm/Load Page.dmp"
    WORD Stat_Page_Ram_Loc

  ALIGN 4
  Store_Page:
    #incbin "asm/Store Page.dmp"
    WORD Stat_Page_Ram_Loc

  ALIGN 4
  Rescue_Arrows:
    #incbin "asm/Check Rescue Arrows.dmp"
    POIN SkillTester
    WORD SaviorID

  ALIGN 4
  Get_Palette_Index:
    #incbin "asm/Get_Palette_Index.dmp"
    POIN Growth_Color_Table

  ALIGN 4
  HP_Name_Color:
    #incbin "asm/HP Name Color.dmp"
    POIN New_Palettes
    WORD Growth_Options
    POIN Get_Hp_Growth
    POIN Get_Palette_Index
  
  	ALIGN 4
	Write_Growths_To_Battle_Struct:
	#incbin "asm/Write_Growths_To_Battle_Struct.dmp"
	POIN Wrapper_GetStatIncreaseWithAngelRing Class_Level_Cap_Table Get_Hp_Growth Get_Str_Growth Get_Skl_Growth Get_Spd_Growth Get_Def_Growth Get_Res_Growth Get_Mag_Growth Get_Luk_Growth
	WORD Growth_Options
	
	ALIGN 4
	Enemy_Autolevel:
	#incbin "asm/Enemy_Autolevel.dmp"
	WORD Growth_Options
	
	ALIGN 4
	New_Unit_Exp:
	#incbin "asm/New_Unit_Exp.dmp"
	POIN Class_Level_Cap_Table
	
  ALIGN 4
  Growth_Color_Table:
    #include "Display Growths Options/Growth Colors Table.txt"

  ALIGN 4
  New_Palettes:
    #include "Display Growths Options/New Palette.txt"

  //#include "EAstdlib.event"

#include "RText.event"

//Remove glowy spinny circle thingy from stat screen

PUSH
ORG $88620
POIN RemoveGlowy
POP

ALIGN 4
RemoveGlowy:
#incext Png2Dmp "RemoveGlowy.png" --lz77


	ALIGN 4
	MESSAGE page 4 at currentOffset
	MSS_page4:
      #incbin "asm/mss_page4_runa.dmp"
	  MESSAGE page 4 ends at currentOffset
	  POIN PersonalDataTable
	  
	ALIGN 4
    PageNumberCheck:
      #include "asm/mss_threepageconditional.lyn.event"
	  POIN PersonalDataTable


// POP
#else // _FE8_
  ERROR Modular Stat Screen hack is for FE8
#endif // _FE8_

#endif // MODULAR_STAT_SCREEN
